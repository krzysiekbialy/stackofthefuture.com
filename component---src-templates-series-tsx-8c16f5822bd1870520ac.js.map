{"version":3,"sources":["webpack:///./src/templates/series.tsx","webpack:///./src/components/subscribe/SubscribeForm.tsx","webpack:///./src/components/subscribe/SubscribeLogo.tsx","webpack:///./src/components/subscribe/SubscribeOverlay.tsx","webpack:///./src/components/header/SiteNav.tsx","webpack:///./src/components/icons/facebook.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/Logo.tsx","webpack:///./src/components/icons/twitter.tsx"],"names":["Tags","props","post","pageContext","serie","content","excerpt","data","allMarkdownRemark","edges","totalCount","css","WallPosts","lang","config","title","name","property","siteUrl","pathContext","slug","facebook","twitter","split","outer","SiteHeader","style","backgroundImage","header","childImageSharp","fluid","src","inner","marginBottom","logo","fixed","alt","isHome","id","SiteMain","PostFeed","PostFeedRaise","map","node","key","fields","pageQuery","SubscribeFormStyles","SubscribeEmail","colors","midgrey","darkgrey","darken","SubscribeFormButton","desaturate","blue","FormGroup","SubscribeForm","noValidate","action","mailchimpAction","method","target","className","type","mailchimpEmailFieldName","placeholder","position","left","aria-hidden","mailchimpName","tabIndex","SubscribeOverlayLogo","SubscribeLogo","query","render","SubscribeOverlay","open","SubscribeOverlayClose","SubscribeOverlayContent","SubscribeOverlayTitle","SubscribeOverlayDescription","SubscribeModal","state","isOpen","escFunction","event","close","setState","subscribeEsc","unsubscribeEsc","componentWillUnmount","this","document","addEventListener","removeEventListener","onClick","React","HomeNavRaise","SiteNavStyles","SiteNavLeft","NavStyles","SiteNavRight","SocialLinks","SubscribeButton","SiteNav","subscribe","openModal","current","SiteNavLogo","role","to","SocialLink","href","rel","showSubscribe","ref","Facebook","xmlns","viewBox","height","d","SiteFooter","setLightness","SiteFooterContent","SiteFooterNav","Footer","Date","getFullYear","footer","rotate","keyframes","Logo","Twitter"],"mappings":"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","file":"component---src-templates-series-tsx-8c16f5822bd1870520ac.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  WallPosts,\n} from '../styles/shared';\nimport { PageContext, PostFrontMatter } from './post';\nimport { Helmet } from 'react-helmet';\nimport config from '../website-config';\nimport { Logo } from '../components/Logo';\n\ninterface TagTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  pageContext: {\n    serieId: string;\n    serie: PostFrontMatter;\n    excerpt: string;\n  };\n  data: {\n    allTagYaml: {\n      edges: Array<{\n        node: {\n          id: string;\n          description: string;\n          image?: {\n            childImageSharp: {\n              fluid: any;\n            };\n          };\n        };\n      }>;\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    header: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n  };\n}\n\nconst Tags: React.FC<TagTemplateProps> = (props) => {\n  const post = props.pageContext.serie;\n  const content = props.pageContext.excerpt;\n  const { edges, totalCount } = props.data.allMarkdownRemark;\n\n  return (\n    <IndexLayout css={WallPosts}>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {post.title} - {config.title}\n        </title>\n        <meta name=\"description\" content={content} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={`${post.title} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={`${post.title} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n      </Helmet>\n      <Wrapper>\n        <header\n          css={[outer, SiteHeader]}\n          style={{\n            backgroundImage: `url('${props.data.header.childImageSharp.fluid.src}')`,\n          }}\n        >\n          <div css={inner}>\n            <SiteHeaderContent>\n              <Logo\n                style={{ marginBottom: 15 }}\n                src={props.data.logo.childImageSharp.fixed.src}\n                alt={post.title}\n              />\n              <SiteTitle>\n                <span>{post.title}</span>\n              </SiteTitle>\n              <SiteDescription>\n                {content}\n                <span>\n                  A collection of {totalCount > 1 && `${totalCount} videos`}\n                  {totalCount === 1 && '1 video'}\n                  {totalCount === 0 && 'No videos. Coming soon...'}\n                </span>\n              </SiteDescription>\n            </SiteHeaderContent>\n            <SiteNav isHome />\n          </div>\n        </header>\n\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed, PostFeedRaise]}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($serieId: String) {\n    logo: file(relativePath: { eq: \"img/Universe.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    header: file(relativePath: { eq: \"img/cover.jpg\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fluid(maxWidth: 2000) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allTagYaml {\n      edges {\n        node {\n          id\n          description\n          image {\n            childImageSharp {\n              fluid(maxWidth: 3720) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___inseries___index], order: ASC }\n      filter: { frontmatter: { inseries: { series: { eq: $serieId } }, draft: { ne: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1240) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 90) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","import { darken, desaturate, lighten, mix } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../../styles/colors';\nimport config from '../../website-config';\n\nconst SubscribeFormStyles = css`\n  @media (max-width: 500px) {\n    -ms-flex-direction: column;\n    flex-direction: column;\n  }\n`;\n\nconst SubscribeEmail = styled.input`\n  display: block;\n  width: 100%;\n  padding-left: 20px;\n  padding-right: 20px;\n  /* border: color(var(--lightgrey) l(+7%)) 1px solid; */\n  color: ${colors.midgrey};\n  font-size: 1.5rem;\n  line-height: 37px;\n  font-weight: normal;\n  user-select: text;\n  transition: border-color 0.15s linear;\n  border: 1px solid ${colors.darkgrey};\n  background: ${colors.darkgrey};\n\n  -webkit-appearance: none;\n  :focus {\n    outline: 0;\n    /* border-color: color(var(--lightgrey) l(-2%)); */\n    border-color: ${darken('0.02', colors.midgrey)};\n  }\n`;\n\nconst SubscribeFormButton = styled.button`\n  display: inline-block;\n  margin: 0 0 0 10px;\n  padding: 0 20px;\n  height: 41px;\n  outline: none;\n  color: #fff;\n  font-size: 1.5rem;\n  line-height: 37px;\n  font-weight: 400;\n  text-align: center;\n  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\n  /* background: linear-gradient(\n    color(var(--blue) whiteness(+7%)),\n    color(var(--blue) lightness(-7%) saturation(-10%)) 60%,\n    color(var(--blue) lightness(-7%) saturation(-10%)) 90%,\n    color(var(--blue) lightness(-4%) saturation(-10%))\n  ); */\n  background: ${colors.darkgrey};\n\n  -webkit-font-smoothing: subpixel-antialiased;\n\n  :active,\n  :focus {\n    /* background: color(var(--blue) lightness(-9%) saturation(-10%)); */\n    background: ${desaturate('0.1', darken('0.09', colors.blue))};\n  }\n  @media (max-width: 500px) {\n    margin: 10px 0 0;\n    width: 100%;\n  }\n`;\n\nconst FormGroup = styled.div`\n  flex-grow: 1;\n  @media (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nconst SubscribeForm: React.FC = () => {\n  return (\n    <form\n      noValidate\n      css={SubscribeFormStyles}\n      action={config.mailchimpAction}\n      method=\"post\"\n      id=\"mc-embedded-subscribe-form\"\n      name=\"mc-embedded-subscribe-form\"\n      target=\"_blank\"\n    >\n      {/* This is required for the form to work correctly  */}\n      <FormGroup className=\"form-group\">\n        <SubscribeEmail\n          className=\"subscribe-email\"\n          type=\"email\"\n          name={config.mailchimpEmailFieldName}\n          id={config.mailchimpEmailFieldName}\n          placeholder=\"youremail@example.com\"\n        />\n      </FormGroup>\n      <div style={{ position: 'absolute', left: '-5000px' }} aria-hidden=\"true\">\n        <input type=\"text\" name={config.mailchimpName} tabIndex={-1} />\n      </div>\n      <SubscribeFormButton type=\"submit\">\n        <span>Subscribe</span>\n      </SubscribeFormButton>\n    </form>\n  );\n};\n\nexport default SubscribeForm;\n","import { graphql, StaticQuery } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport config from '../../website-config';\n\nconst SubscribeOverlayLogo = styled.img`\n  position: fixed;\n  top: 23px;\n  left: 30px;\n  height: 30px;\n`;\n\ninterface SiteNavLogoProps {\n  logo?: {\n    childImageSharp: {\n      fixed: any;\n    };\n  };\n}\n\nconst SubscribeLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query SubscribeOverlayLogo {\n        logo: file(relativePath: { eq: \"img/ghost-logo.png\" }) {\n          childImageSharp {\n            # Specify the image processing specifications right in the query.\n            # Makes it trivial to update as your page's design changes.\n            fixed {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    // tslint:disable-next-line:react-this-binding-issue\n    render={(data: SiteNavLogoProps) =>\n      data.logo && (\n        <SubscribeOverlayLogo src={data.logo.childImageSharp.fixed.src} alt={config.title} />\n      )}\n  />\n);\n\nexport default SubscribeLogo;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { colors } from '../../styles/colors';\nimport config from '../../website-config';\nimport SubscribeForm from './SubscribeForm';\nimport SubscribeLogo from './SubscribeLogo';\n\ninterface SubscribeOverlayProps {\n  open?: boolean;\n}\n\nconst SubscribeOverlay = styled.div<SubscribeOverlayProps>`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 9000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 25, 40, 0.97);\n  opacity: ${(props: SubscribeOverlayProps) => (props.open ? 1 : 0)};\n  transition: opacity 200ms ease-in;\n  pointer-events: ${(props: SubscribeOverlayProps) => (props.open ? 'auto' : 'none')};\n  backdrop-filter: blur(3px);\n\n  form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    max-width: 500px;\n  }\n\n  .form-group {\n    flex-grow: 1;\n  }\n\n  .subscribe-email {\n    display: block;\n    padding: 14px 20px;\n    width: 100%;\n    border: none;\n    color: ${colors.midgrey};\n    font-size: 2rem;\n    line-height: 1em;\n    font-weight: normal;\n    letter-spacing: 0.5px;\n    user-select: text;\n    border-radius: 8px;\n    transition: border-color 0.15s linear;\n\n    -webkit-appearance: none;\n  }\n\n  button {\n    display: inline-block;\n    margin: 0 0 0 15px;\n    padding: 0 25px;\n    height: 52px;\n    outline: none;\n    color: #fff;\n    font-size: 1.7rem;\n    line-height: 37px;\n    font-weight: 400;\n    text-align: center;\n    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\n    background: linear-gradient(\n      color(var(--blue) whiteness(+7%)),\n      color(var(--blue) lightness(-7%) saturation(-10%)) 60%,\n      color(var(--blue) lightness(-7%) saturation(-10%)) 90%,\n      color(var(--blue) lightness(-4%) saturation(-10%))\n    );\n    border-radius: 8px;\n    box-shadow: 0 0 0 1px inset rgba(0, 0, 0, 0.14);\n\n    -webkit-font-smoothing: subpixel-antialiased;\n  }\n`;\n\nconst SubscribeOverlayClose = styled.a`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 40px;\n    right: 25px;\n    display: block;\n    width: 30px;\n    height: 2px;\n    background: #fff;\n    opacity: 0.8;\n    transform: rotate(45deg);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 40px;\n    right: 25px;\n    display: block;\n    width: 30px;\n    height: 2px;\n    background: #fff;\n    opacity: 0.8;\n    transform: rotate(-45deg);\n  }\n\n  :hover {\n    cursor: default;\n  }\n`;\n\nconst SubscribeOverlayContent = styled.div`\n  position: relative;\n  z-index: 9999;\n  margin: 0 0 5vw 0;\n  padding: 4vw;\n  color: #fff;\n  text-align: center;\n`;\n\nconst SubscribeOverlayTitle = styled.h1`\n  display: inline-block;\n  margin: 0 0 10px 0;\n  font-size: 6rem;\n  line-height: 1.15em;\n`;\n\nconst SubscribeOverlayDescription = styled.p`\n  margin: 0 auto 50px;\n  max-width: 650px;\n  font-size: 3rem;\n  line-height: 1.3em;\n  font-weight: 300;\n  opacity: 0.8;\n`;\n\ninterface SubscribeState {\n  isOpen: boolean;\n}\n\nclass SubscribeModal extends React.Component<any, SubscribeState> {\n  state = { isOpen: false };\n\n  componentWillUnmount() {\n    this.unsubscribeEsc();\n  }\n\n  escFunction = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      this.close();\n    }\n  };\n\n  subscribeEsc() {\n    document.addEventListener('keydown', this.escFunction, false);\n  }\n\n  unsubscribeEsc() {\n    document.removeEventListener('keydown', this.escFunction, false);\n  }\n\n  open = () => {\n    this.setState({ isOpen: true });\n    this.subscribeEsc();\n  };\n\n  close = () => {\n    this.setState({ isOpen: false });\n    this.unsubscribeEsc();\n  };\n\n  render() {\n    return (\n      <SubscribeOverlay open={this.state.isOpen}>\n        <SubscribeOverlayClose onClick={this.close} />\n        <SubscribeOverlayContent>\n          <SubscribeLogo />\n          <SubscribeOverlayTitle>Subscribe to {config.title}</SubscribeOverlayTitle>\n          <SubscribeOverlayDescription>\n            Stay up to date! Get all the latest &amp; greatest posts delivered straight to your\n            inbox\n          </SubscribeOverlayDescription>\n          <SubscribeForm />\n        </SubscribeOverlayContent>\n      </SubscribeOverlay>\n    );\n  }\n}\n\nexport default SubscribeModal;\n","// tslint:disable:no-http-string\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { SocialLink } from '../../styles/shared';\nimport config from '../../website-config';\nimport Facebook from '../icons/facebook';\nimport Twitter from '../icons/twitter';\nimport SubscribeModal from '../subscribe/SubscribeOverlay';\nimport SiteNavLogo from './SiteNavLogo';\n\nconst HomeNavRaise = css`\n  @media (min-width: 900px) {\n    position: relative;\n    top: -70px;\n  }\n`;\n\nconst SiteNavStyles = css`\n  position: relative;\n  z-index: 300;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  overflow-y: hidden;\n  height: 40px;\n  font-size: 1.2rem;\n`;\n\nconst SiteNavLeft = styled.div`\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n  margin-right: 10px;\n  padding-bottom: 80px;\n  letter-spacing: 0.4px;\n  white-space: nowrap;\n\n  -ms-overflow-scrolling: touch;\n\n  @media (max-width: 700px) {\n    margin-right: 0;\n    padding-left: 4vw;\n  }\n`;\n\nconst NavStyles = css`\n  display: flex;\n  margin: 0 0 0 -12px;\n  padding: 0;\n  list-style: none;\n\n  li {\n    display: block;\n    margin: 0;\n    padding: 0;\n    text-transform: uppercase;\n  }\n\n  li a {\n    display: block;\n    margin: 0;\n    padding: 10px 12px;\n    color: #fff;\n    opacity: 0.8;\n  }\n\n  li a:hover {\n    text-decoration: none;\n    opacity: 1;\n  }\n`;\n\nconst SiteNavRight = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 40px;\n\n  @media (max-width: 700px) {\n    display: none;\n  }\n`;\n\nconst SocialLinks = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  a:last-of-type {\n    padding-right: 20px;\n  }\n`;\n\nconst SubscribeButton = styled.a`\n  display: block;\n  padding: 4px 10px;\n  border: #fff 1px solid;\n  color: #fff;\n  font-size: 1.2rem;\n  line-height: 1em;\n  border-radius: 10px;\n  opacity: 0.8;\n\n  :hover {\n    text-decoration: none;\n    opacity: 1;\n    cursor: pointer;\n  }\n`;\n\ninterface SiteNavProps {\n  isHome?: boolean;\n}\n\nclass SiteNav extends React.Component<SiteNavProps> {\n  subscribe = React.createRef<SubscribeModal>();\n\n  openModal = () => {\n    if (this.subscribe.current) {\n      this.subscribe.current.open();\n    }\n  };\n\n  render() {\n    const { isHome = false } = this.props;\n    return (\n      <nav css={[isHome && HomeNavRaise, SiteNavStyles]}>\n        <SiteNavLeft>\n          {!isHome && <SiteNavLogo />}\n          <ul css={NavStyles} role=\"menu\">\n            {/* TODO: mark current nav item - add class nav-current */}\n            <li role=\"menuitem\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/about\">About</Link>\n            </li>\n          </ul>\n        </SiteNavLeft>\n        <SiteNavRight>\n          <SocialLinks>\n            {config.facebook && (\n              <a\n                css={SocialLink}\n                href={config.facebook}\n                target=\"_blank\"\n                title=\"Facebook\"\n                rel=\"noopener noreferrer\"\n              >\n                <Facebook />\n              </a>\n            )}\n            {config.twitter && (\n              <a\n                css={SocialLink}\n                href={config.twitter}\n                title=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Twitter />\n              </a>\n            )}\n          </SocialLinks>\n          {config.showSubscribe && (\n            <SubscribeButton onClick={this.openModal}>Subscribe</SubscribeButton>\n          )}\n          {config.showSubscribe && <SubscribeModal ref={this.subscribe} />}\n        </SiteNavRight>\n      </nav>\n    );\n  }\n}\n\nexport default SiteNav;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Facebook: React.FC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" style={{ height: '1.5rem' }}>\n    <path d=\"M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z\" />\n  </svg>\n);\nexport default Facebook;\n","import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-child {\n      margin-left: 0;\n    }\n  }\n`;\n\nconst Footer: React.FC = () => {\n  return (\n    <footer css={[outer, SiteFooter]}>\n      <div css={[inner, SiteFooterContent]}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}{' '}\n          {config.footer && (\n            <Link to=\"/\">\n              | {config.title} {config.footer}\n            </Link>\n          )}\n        </section>\n        <SiteFooterNav>\n          <Link to=\"/\">Latest Posts</Link>\n          {config.facebook && (\n            <a href={config.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n              Facebook\n            </a>\n          )}\n          {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )}\n\n          <a href=\"https://graphqleditor.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n            GraphQL Editor\n          </a>\n\n          <a href=\"/rss.xml\">RSS</a>\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { keyframes } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nconst rotate = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(720deg);\n}\n`;\n\nexport const Logo = styled.img`\n  animation: ${rotate} 100s infinite;\n`;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Twitter: React.FC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n    <path d=\"M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z\" />\n  </svg>\n);\nexport default Twitter;\n"],"sourceRoot":""}